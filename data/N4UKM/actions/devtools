BB=/data/N4UKM/busybox;
TIMESTAMP=`date +%Y-%m-%d.%H.%M.%S`;
LOGS=/sdcard/logs;

[ ! -d "$LOGS" ] && $BB mkdir -p "$LOGS";
$BB chmod 755 $LOGS;

case $1 in
	bootloader)	
		block=/dev/block/platform/msm_sdcc.1/by-name/misc;
		locked=00;
		unlocked=01;

		lockstate=`$BB dd ibs=1 count=1 skip=16400 if=$block 2> /dev/null | $BB od -h | $BB head -n 1 | $BB cut -c 11-`;

		if [ $lockstate == $locked ]; then
			echo "Setting State to Unlocked...";
			setstate=$unlocked;
		elif [ $lockstate == $unlocked ]; then
			echo "Setting State to Locked...";
			setstate=$locked;
		else
			echo "State is Unknown. No changes were made.";
		fi;
		
		if [ -n "$setstate" ]; then
			echo -ne "\x$setstate" | $BB dd obs=1 count=1 seek=16400 of=$block 2> /dev/null;
		fi;
	;;
	
	tamper)	
		block=/dev/block/platform/msm_sdcc.1/by-name/misc;
		false=00;
		true=01;

		tamperstate=`$BB dd ibs=1 count=1 skip=16404 obs=1 if=$block 2> /dev/null | $BB od -h | $BB head -n 1 | $BB cut -c 11-`;

		if [ $tamperstate == $true ]; then
			echo "Setting Tamper to False...";
			setstate=$false;
		elif [ $tamperstate == $false ]; then
			echo "Setting Tamper to True...";
			setstate=$true;
		else
			"Tamper is Unknown. No changes were made.";
		fi;
		
		if [ -n "$setstate" ]; then
			echo -ne "\x$setstate" | $BB dd obs=1 count=1 seek=16404 of=$block 2> /dev/null;
		fi;
	;;
	
	selinux)	
		if [[ ! -z $2 ]]; then
			if [ $2 = "Enforcing" ]; then
				setenforce 1;
			elif [ $2 = "Permissive" ]; then
				setenforce 0;
			fi;
		fi

		echo `getenforce`
	;;
	
	logcat)
		saved="$LOGS/logcat-$TIMESTAMP.txt";
		logcat -d > $saved;
	;;

	dmesg)
		saved="$LOGS/dmesg-$TIMESTAMP.txt";
		$BB dmesg > $saved;
	;;

	kmsg)
		kmsg=/proc/last_kmsg;
		if [ -f $kmsg ]; then
			saved="$LOGS/last_kmsg-$TIMESTAMP.txt";
			$BB cp -f $kmsg $saved;
		else
			echo "$kmsg not found.";
		fi;
	;;

	reboot)
		$BB sleep 1;
		reboot $2;
	;;
esac;

case $1 in
	logcat|dmesg|kmsg)
		echo "Logfile saved to $saved";
	;;
esac;
