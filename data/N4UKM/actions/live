case $1 in
	battemp)
		BAT_C=`cat /sys/class/power_supply/battery/temp`
		BAT_C=`awk "BEGIN { print ( $BAT_C / 10 ) }"`
		BAT_F=`awk "BEGIN { print ( ($BAT_C * 1.8) + 32 ) }"`
		BAT_H=`cat /sys/class/power_supply/battery/health`;

		echo "$BAT_C째C | $BAT_F째F@nHealth: $BAT_H";
		;;
	cputemp)
		CPU_C=`cat /sys/class/thermal/thermal_zone7/temp`;
		CPU_F=`awk "BEGIN { print ( ($CPU_C * 1.8) + 32 ) }"`

		echo "$CPU_C째C | $CPU_F째F";
		;;
	memory)
		while read TYPE MEM KB; do
			if [ "$TYPE" == "MemTotal:" ]; then
				TOTAL="$((MEM / 1024)) MB"
			elif [ "$TYPE" = "MemFree:" ]; then
				CACHED=$((MEM / 1024))
			elif [ "$TYPE" = "Cached:" ]; then
				FREE=$((MEM / 1024))
			fi
		done < /proc/meminfo;
		
		FREE="$((FREE + CACHED)) MB"
		
		echo "Total: $TOTAL@nFree: $FREE"
		;;
	uptime)
		UPTIME=`uptime`;
		echo "${UPTIME//, /@n}";
		;;
	unused)
		UNUSED="";
		while read FREQ TIME; do
			FREQ="$((FREQ / 1000)) MHz"
			if [ $TIME -eq "0" ]; then
				UNUSED="$UNUSED$FREQ, "
			fi
		done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;
		
		UNUSED=${UNUSED%??}
		echo "$UNUSED"
		;;
	time)
		STATE="";
		CNT=0;
		SUM=`awk '{s+=$2} END {print s}' /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state`;
		
		while read FREQ TIME; do
			if [ "$CNT" -ge $2 ] && [ "$CNT" -le $3 ]; then
				FREQ="$((FREQ / 1000)) MHz"
				if [ $TIME -gt "0" ]; then
					PERC=`awk "BEGIN { print ( ($TIME / $SUM) * 100) }"`
					PERC="`printf "%0.1f\n" $PERC`%"
					TIME=$((TIME / 100))
					STATE="$STATE $FREQ - `echo - | awk -v "S=$TIME" '{printf "%dh:%dm:%ds",S/(60*60),S%(60*60)/60,S%60}'` - ($PERC)@n"
				fi
			fi
			CNT=$((CNT+1))
		done < /sys/devices/system/cpu/cpu0/cpufreq/stats/time_in_state;
		
		STATE=${STATE%??}
		echo "$STATE"
		;;
	cpufreq)
	
		if [ -e "/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_cur_freq" ]; then
			CPU0="$((`cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq` / 1000)) MHz";
		else
			CPU0="Offline"
		fi
		
		if [ -e "/sys/devices/system/cpu/cpu1/cpufreq/cpuinfo_cur_freq" ]; then
			CPU1="$((`cat /sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq` / 1000)) MHz";
		else
			CPU1="Offline"
		fi
		
		if [ -e "/sys/devices/system/cpu/cpu2/cpufreq/cpuinfo_cur_freq" ]; then
			CPU2="$((`cat /sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq` / 1000)) MHz";
		else
			CPU2="Offline"
		fi
		
		if [ -e "/sys/devices/system/cpu/cpu3/cpufreq/cpuinfo_cur_freq" ]; then
			CPU3="$((`cat /sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq` / 1000)) MHz";
		else
			CPU3="Offline"
		fi
		
		echo "Core 0: $CPU0@nCore 1: $CPU1@nCore 2: $CPU2@nCore 3: $CPU3";
		;;
	entropy)
		echo "`cat /proc/sys/kernel/random/entropy_avail`";
		;;
	gpufreq)
		GPUFREQ="$((`cat /sys/devices/platform/kgsl-3d0.0/kgsl/kgsl-3d0/gpuclk` / 1000000)) MHz";
		echo "$GPUFREQ";
		;;
	cpuload)
		echo "`cat /sys/module/msm_hotplug/current_load`";
		;;
	bootloader)
		lockstate=`dd ibs=1 count=1 skip=16400 if=/dev/block/platform/msm_sdcc.1/by-name/misc 2> /dev/null | od -h | head -n 1 | cut -c 11-`;
		if [ $lockstate == "00" ]; then
			echo "Locked";
		elif [ $lockstate == "01" ]; then
			echo "Unlocked";
		else
			echo "Unknown";
		fi;
		;;
esac;
